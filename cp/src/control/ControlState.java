package control;

/*
Любое игровое состояние должно реализовывать интерфес ControlState
Принцип работы:
    Смена состояния происходит в начале итерации игрового цикла
    Сначала вызывается destroy предыдущего состояния
    Затем вызывается init текущего
    Для смены состояния вызвать Control.getInstance().changeState(новое состояние)
    Если состяние то же самое, поведение не определено
    Если разные, то смена состояния произойдёт только в начале следующей итерации
    Вызов init первого состояния происходит при вызове Control.getInstance().init()
    Вызов destroy последнего состояния при исключениях не происходит (пока)

    Вызов input происходит в начале каждой итерации
    Вызов update соответственно после input
    Вызов draw после исчерпания итерационной задержки
*/

public interface ControlState {
    void input();
    void update();
    void draw();
    void destroy();
    void init() throws ControlException;
}